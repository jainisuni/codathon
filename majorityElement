int Solution::majorityElement(const vector<int> &A) {
/*
Given an array of size N, find the majority element. The majority element is the element that appears more than floor(N/2) times.
You may assume that the array is non-empty and the majority element always exist in the array.

*/
  
    
   int i=0,j=0; 
   int index=-1;
   int maxCount=0;
   
    for(  i=0;i<A.size(); i++)
    {
       int count=0;
       for( j=0; j<A.size();j++)
       {
           if(A[i]==A[j])
           {
                count++;
                
           }
            
       }
       if(count>maxCount)
       {
           maxCount=count;
           index=i;
       }
       
    }
   
   if(maxCount>floor(A.size()/2))
        return A[index];
    else
        return 0;
}
